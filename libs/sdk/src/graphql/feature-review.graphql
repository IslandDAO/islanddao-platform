fragment ReviewDetails on Review {
  createdAt
  id
  projectId
  reviewerId
  updatedAt
  name
  ratingAverage
  ratingProgress
  project {
    ...ProjectDetails
  }
  reviewer {
    ...UserDetails
  }
  viewUrl
}

query managerFindManyReviewByProject($input: ManagerFindManyReviewByProjectInput!) {
  items: managerFindManyReviewByProject(input: $input) {
    ...ReviewDetails
  }
}

query reviewerFindManyReviewByProject($input: ReviewerFindManyReviewByProjectInput!) {
  items: reviewerFindManyReviewByProject(input: $input) {
    ...ReviewDetails
  }
}

query reviewerFindManyReviewByUsername($input: ReviewerFindManyReviewByUsernameInput!) {
  items: reviewerFindManyReviewByUsername(input: $input) {
    ...ReviewDetails
  }
}

query reviewerFindUserProjectReview($projectId: String!) {
  item: reviewerFindUserProjectReview(projectId: $projectId) {
    ...ReviewDetails
  }
}

query reviewerFindOneReview($reviewId: String!) {
  item: reviewerFindOneReview(reviewId: $reviewId) {
    ...ReviewDetails
  }
}

mutation reviewerCreateReview($projectId: String!) {
  created: reviewerCreateReview(projectId: $projectId) {
    ...ReviewDetails
  }
}

mutation reviewerDeleteReview($reviewId: String!) {
  deleted: reviewerDeleteReview(reviewId: $reviewId)
}

query adminFindManyReview($input: AdminFindManyReviewInput!) {
  paging: adminFindManyReview(input: $input) {
    data {
      ...ReviewDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query adminFindOneReview($reviewId: String!) {
  item: adminFindOneReview(reviewId: $reviewId) {
    ...ReviewDetails
  }
}

mutation adminDeleteReview($reviewId: String!) {
  deleted: adminDeleteReview(reviewId: $reviewId)
}
