fragment ProjectDetails on Project {
  amountManagerUsd
  amountReferralUsd
  amountTotalUsd
  avatarUrl
  createdAt
  id
  instructions
  linkDiscord
  linkGithub
  linkTelegram
  linkTwitter
  linkWebsite
  links
  managers {
    ...UserDetails
  }
  name
  slug
  status
  tags
  teamId
  team {
    ...TeamDetails
  }
  updatedAt
  viewUrl
}

query userFindManyProject($input: UserFindManyProjectInput!) {
  paging: userFindManyProject(input: $input) {
    data {
      ...ProjectDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query userFindOneProject($projectId: String!) {
  item: userFindOneProject(projectId: $projectId) {
    ...ProjectDetails
  }
}

query adminFindManyProject($input: AdminFindManyProjectInput!) {
  paging: adminFindManyProject(input: $input) {
    data {
      ...ProjectDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query adminFindOneProject($projectId: String!) {
  item: adminFindOneProject(projectId: $projectId) {
    ...ProjectDetails
    referral {
      ...UserDetails
    }
    members {
      ...UserDetails
    }
  }
}

mutation adminUpdateProject($projectId: String!, $input: AdminUpdateProjectInput!) {
  updated: adminUpdateProject(projectId: $projectId, input: $input) {
    ...ProjectDetails
  }
}

mutation adminDeleteProject($projectId: String!) {
  deleted: adminDeleteProject(projectId: $projectId)
}

mutation adminAddProjectManager($projectId: String!, $managerUserId: String!) {
  added: adminAddProjectManager(projectId: $projectId, managerUserId: $managerUserId)
}

mutation adminRemoveProjectManager($projectId: String!, $managerUserId: String!) {
  removed: adminRemoveProjectManager(projectId: $projectId, managerUserId: $managerUserId)
}

mutation adminAddProjectMember($projectId: String!, $memberUserId: String!) {
  added: adminAddProjectMember(projectId: $projectId, memberUserId: $memberUserId)
}

mutation adminRemoveProjectMember($projectId: String!, $memberUserId: String!) {
  removed: adminRemoveProjectMember(projectId: $projectId, memberUserId: $memberUserId)
}

mutation adminAddProjectReferral($projectId: String!, $referralUserId: String!) {
  added: adminAddProjectReferral(projectId: $projectId, referralUserId: $referralUserId)
}

mutation adminRemoveProjectReferral($projectId: String!, $referralUserId: String!) {
  removed: adminRemoveProjectReferral(projectId: $projectId, referralUserId: $referralUserId)
}

query managerFindManyProject($input: ManagerFindManyProjectInput!) {
  paging: managerFindManyProject(input: $input) {
    data {
      ...ProjectDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query managerFindOneProject($projectId: String!) {
  item: managerFindOneProject(projectId: $projectId) {
    ...ProjectDetails
    referral {
      ...UserDetails
    }
    members {
      ...UserDetails
    }
  }
}

mutation managerCreateProject($input: ManagerCreateProjectInput!) {
  created: managerCreateProject(input: $input) {
    ...ProjectDetails
  }
}

mutation managerUpdateProject($projectId: String!, $input: ManagerUpdateProjectInput!) {
  updated: managerUpdateProject(projectId: $projectId, input: $input) {
    ...ProjectDetails
  }
}

mutation managerDeleteProject($projectId: String!) {
  deleted: managerDeleteProject(projectId: $projectId)
}

mutation managerAddProjectManager($projectId: String!, $managerUserId: String!) {
  added: managerAddProjectManager(projectId: $projectId, managerUserId: $managerUserId)
}

mutation managerRemoveProjectManager($projectId: String!, $managerUserId: String!) {
  removed: managerRemoveProjectManager(projectId: $projectId, managerUserId: $managerUserId)
}

mutation managerAddProjectMember($projectId: String!, $memberUserId: String!) {
  added: managerAddProjectMember(projectId: $projectId, memberUserId: $memberUserId)
}

mutation managerRemoveProjectMember($projectId: String!, $memberUserId: String!) {
  removed: managerRemoveProjectMember(projectId: $projectId, memberUserId: $memberUserId)
}

mutation managerAddProjectReferral($projectId: String!, $referralUserId: String!) {
  added: managerAddProjectReferral(projectId: $projectId, referralUserId: $referralUserId)
}

mutation managerRemoveProjectReferral($projectId: String!, $referralUserId: String!) {
  removed: managerRemoveProjectReferral(projectId: $projectId, referralUserId: $referralUserId)
}
