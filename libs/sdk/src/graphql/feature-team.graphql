fragment TeamDetails on Team {
  activeProjectsCount
  avatarUrl
  createdAt
  homeServerId
  id
  memberCount
  name
  updatedAt
  viewUrl
  members {
    ...TeamMemberDetails
  }
}

fragment TeamMemberDetails on TeamMember {
  createdAt
  id
  userId
  user {
    ...UserDetails
  }
  admin
  updatedAt
}

query userFindManyTeam($input: UserFindManyTeamInput!) {
  paging: userFindManyTeam(input: $input) {
    data {
      ...TeamDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query userFindOneTeam($teamId: String!) {
  item: userFindOneTeam(teamId: $teamId) {
    ...TeamDetails
  }
}

query managerGetTeamMembers($teamId: String!) {
  items: managerGetTeamMembers(teamId: $teamId) {
    ...TeamMemberDetails
  }
}

query managerGetTeamMember($teamId: String!) {
  item: managerGetTeamMember(teamId: $teamId) {
    ...TeamMemberDetails
  }
}

query managerFindManyTeam($input: ManagerFindManyTeamInput!) {
  paging: managerFindManyTeam(input: $input) {
    data {
      ...TeamDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query managerFindOneTeam($teamId: String!) {
  item: managerFindOneTeam(teamId: $teamId) {
    ...TeamDetails
  }
}

mutation managerCreateTeam($input: ManagerCreateTeamInput!) {
  created: managerCreateTeam(input: $input) {
    ...TeamDetails
  }
}

mutation managerUpdateTeam($teamId: String!, $input: ManagerUpdateTeamInput!) {
  updated: managerUpdateTeam(teamId: $teamId, input: $input) {
    ...TeamDetails
  }
}

mutation managerDeleteTeam($teamId: String!) {
  deleted: managerDeleteTeam(teamId: $teamId)
}

query adminFindManyTeam($input: AdminFindManyTeamInput!) {
  paging: adminFindManyTeam(input: $input) {
    data {
      ...TeamDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query adminGetTeamMembers($teamId: String!) {
  items: adminGetTeamMembers(teamId: $teamId) {
    ...TeamMemberDetails
  }
}

query adminFindOneTeam($teamId: String!) {
  item: adminFindOneTeam(teamId: $teamId) {
    ...TeamDetails
  }
}

mutation adminUpdateTeam($teamId: String!, $input: AdminUpdateTeamInput!) {
  updated: adminUpdateTeam(teamId: $teamId, input: $input) {
    ...TeamDetails
  }
}

mutation adminDeleteTeam($teamId: String!) {
  deleted: adminDeleteTeam(teamId: $teamId)
}

mutation adminAddTeamMember($teamId: String!, $userId: String!) {
  added: adminAddTeamMember(teamId: $teamId, userId: $userId)
}
mutation adminRemoveTeamMember($teamId: String!, $userId: String!) {
  removed: adminRemoveTeamMember(teamId: $teamId, userId: $userId)
}

mutation adminToggleTeamAdmin($teamId: String!, $userId: String!) {
  toggled: adminToggleTeamAdmin(teamId: $teamId, userId: $userId)
}

mutation managerAddTeamMember($teamId: String!, $userId: String!) {
  added: managerAddTeamMember(teamId: $teamId, userId: $userId)
}
mutation managerRemoveTeamMember($teamId: String!, $userId: String!) {
  removed: managerRemoveTeamMember(teamId: $teamId, userId: $userId)
}

mutation managerToggleTeamAdmin($teamId: String!, $userId: String!) {
  toggled: managerToggleTeamAdmin(teamId: $teamId, userId: $userId)
}
